---------- 2016-02-04 ----------------
some notes on osc.
    * ZirkOSC only has a sending connection, to the local ip address 127.0.0.1, port 18032
    * Octogris, for the ipad connection, has a sending connection to the address/port specified in the
    relevant text boxes, and a receiving connection from the "default" local adress (obtained with
    getLocalIPAddress())
--------- 2016-02-10 -----------------
WHAT IS NEXT?
* review juce compiler warnings
* version windows
* en mode internal routing, désactiver les components inutiles(dans studio)
* utiliser mode HRTF avec zirkonium
* GUI
    * avoir une texture en background
    * try different fonts
--------- 2016-02-17 -------------
ok. so 2 problems
1- compared to octogris, spatgris surface (free volume) and span (pan span) are reversed.
2- only for source 1, setting volume (or pan) and reading it is reversed
-------- 2016-03-02 ------------
ok. so problem in reaper with number of inputs and outputs. 

what is critical, is that in processblock, we don't use more inputs/outputs than given by getTotal. 

so currently, getTotal for AU and VST3 is able to read the I/O number of inputs and outputs. NOT vst2.
Check if we can fix this using setPreferredBusArrangement. but if we do that, we need to remove Plugin Channel Configurations from introjucer

ok, there is an example surround plugin which looks at this very problem. With vst2, reaper seems to make a ton of random calls to setPrefferedBusArrangement, so not sure how to deal with that. Could recommend using vst3 with reaper, but need to ensure vst2 is working with DP. 

DP
Spatgris is crashing dp at the moment. Need to test surround. So apparently: 
* dp uses AU by default...
* i cannot load the surround plugin, even though it is in the plugin manager... BECAUSE IT IS A SYNTH. it works really well, and there are several calls to getPreferred, but it ends on createFront7point1. 

LOGIC
seems to also work, but needs to be tested more.

CHECKING OCTOGRIS3
DP: OK
reaper: vst2:OK, vst3: NAN, AU: ok
logic: (probably ok)

ok. so if octogris3 is working... could we not use the same code in SpatGRIS? well wait, vst3 was not working for octogris. but who gives a shit?
so current git version of octogris is the same source code as 3.0.1, but a different version of JUCE, which may be critical. let's try it. 
it doesn't work. so the juce version is probably to blame!

testing juce versions
LATEST PULL: 
* introjucer plygin channel config NOT deprecated
* spatgris 
    * au: load 2x2, 8x8 avail
    * vst3: same
    * vst2: load 2x2, 2x2 max avail


v4.0.1: 
* introjucer plugin channel config deprecated
* octogris vst2 ok, vst3 not
* spatgris: vst2 8x16, vst3 8x8, au 2x2 selected, 8x16 avail
* SO EVERYTHING WORKS. problem is with bleeding edge juce version. need to be careful with this for next JUCE release. 
------------- 2016-03-09 ----------------------
src and speaker positions need to be reset when prepare to play changes their numbers. 
alright, that's fixed. 

NOW #27
DP seems fine, other than lagging on trajectories...
Logic is quite troublesome. Having saved a project, on reopening no sound. Need to deactivate and reactivate main audio track. Then outputs 5 and 7 do not work, output 8 goes on 8 and 7, output 6 goes on 6 and 5. then if you stop playing and start it again, you start to lose some outputs, until only 4 is working. deactivating and reactivating spatgris on main track resets the behaviour. 

ok, one way to fix the outputs 8 and 6 being doubles on 7 and 5 is to use surround busses (hold the logo on the right of the input name on aux tracks to select surround bus input). 

but we still have the problem of the plugin needing to be re-initialized after stopping playback.
------------- 2016-03-23 -------------------
#47: Clicks audio au centre. 

Ces clicks semblent être causés par des shorts bursts d'activité dans tous les haut-parleurs. Au centre, c'est normal que tous les haut-parleurs soient solicités, j'imagine? Ce qu'il faut s'assurer est de ne pas avoir de transient super rapide. Est-ce qu'il y a déjà un algorithme qui regarde le delta inter-sample?

playing with param smoothing slider has an effect, mais ne rêgle pas complètement le problème de click audios. 

searching for ksmooth, I see that param smoothing is used in all process modes, in processor::ProcessData.
------------ 2016-03-24 ---------------
#51: osc spat thread leak
I think this can be fixed at the same time as #52 (source update thread not running when editor is
closed). 
Both threads need to run in the processor, and be deleted using an owned array.
----------- 2016-04-06 -----------
cur: 1e8e158a97fc260366d6d9505e0f38526750d940
ok. probleme bizarre ici, issue #59. Quel est le path de vie du mover?
* unique_ptr dans processor.h
* instancié fin du constructor processor
* passé au constructor de l'editor dans createEditor(), en tant que pointer normal (seems to be ok if nothing is messing with pointer ownership...).
* passé au constructor de FieldComponent dans editor constructor
* passe au constructor de trajectories dans buttonClicked()
* editor::getMover() sends the mover to HIDDelegate, OctoLeap, OscComponent


Alright, i don't see any obvious problems with the mover pointer, so looking into when sourceUpdateThread is run and stopped. 
It should run when 
    * we have more than 1 source
    * we're not recording automation
    * we're in a dependent mode

--- #47 ---
audio clicks. they don't seem to be due to a sudden big transient, although only tested difference between 2 samples, could be something more complicated... 
What if it is due to having all speakers activated at once? Or something similar, like the angle problem in the center? Looking at ProcessDataPanVolumeMode(). 

--------------------- 2016-04-13 ------------------
OK. problèmes en lien avec les performances:
    * Octogris #114: lag automation manuelles
    * Spatgris # 60: CPU prends trop de jus

Robert s'inquiète beaucoup de #114. 
    * DP (AU): 
        * dernier octogris (301) plus lent que spatgris
        * octogris 213 également a chier
        * octogris 225 > 226 (où arrive la trace) > 228 (trace est blanche)  
    * Logic(AU): spatgris aussi bad que octogris 301
    * Reaper: vst all good...!

Donc, on a:
    * AU vs VST
        * test this in reaper
            * 301: aucun problème
                * les CPU de Octogris VST, AU et grm spaces sont comparables.
                    * repos, sans interface: 9-10%
                    * repos, interface: 9-11%
                    * lecture automation, interface: 46% 
                    * ecriture automation manuelle: 57-58%
    * 225 vs 228
        * test this in DP
    * Octogris en general vs Spatgris
        * test this in logic
            * CPU
                * spatgris 011
                    * repos, interface ou pas : 3-4%
                    * ecriture automation manuelle:  80-85%
                    * lecture automation, interface: 51-60%
                * octogris 301
                    * repos, interface ou pas, 4-5%
                    * écriture automation manuelle: 58-68%, augmentation avec le temps, probablement a cause de la trace
                    * octogris 301 is cout-ing stuff!!!!
                        * removed them in 302, doesn't change performance...
                        * what about removing the trace?
                            * ecriture: peak 77%, lecture 56%, mieux mais pas parfait.
                            * looking at juce demo for ideas to optimise trace and other GUI things, I found the chain demo
                              in box2d, which is someone else's tests in opengl or something. Probably worth checking out
                              at some point...
        * DP 
            * CPU with trace, octogris 3.0.2
                * repos, interface ou pas 15%
                * ecriture manuelle 78-88%
                * lecture 68-70%
            *sans trace
                * repos, interface ou pas, 16-18%
                * ecriture 75-80%
                    * quand meme laggy a fond.
            * spatgris
                * repos 23-24
                * ecriture manuelle 86-87%, increasing with trace, better than octogris for sure
                * lecture 63%
                * lecture 60-70

TIMING AND TRYING THINGS
    I added a vector in which i push times from editor::timerCallBack. NEED TO TURN TIMING_THINGS MACRO OFF. Here are the various things I tried turning off:

    * trace
        helps a bit, try to print only last X subpaths
    * speaker levels
        * Turns out displaying speaker levels takes a lot of CPU, and not displaying them removes any visual lag from DP...!
        * so far this makes the biggest difference on gui and automation
        * disabled this when writing automation
    *these 2 calls take most of the time in repaint and are not useful at al during automation: updateSourceLocationTextEditor() and updateSpeakerLocationTextEditor(). 
        * but removing them make no difference on gui/automation lag
        * still deactivated them, because spending this much time on this is ludicrous!

--------------------- 2016-05-16 ------------------
#47
clicks when 
    * recording manual automation
    * reading manual automation
    * reading trajectory
    * recording trajectory that is fast enough, like .3s return  pendulum

looking at older versions
* v2.1.3. before joystick, internal routing, source unique
    * clicks everywhere, but recording pendulum at .3s no clicks (.1 sec yes)
* there's clicks in every single version. This is a problem rooted deep in the algorithm
